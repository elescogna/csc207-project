@startuml
!pragma layout smetana

interface SignupInputBoundary {
    +execute(signupInputData: SignupInputData): void
}
class SignupInteractor implements SignupInputBoundary {
    -userDataAccessObject: SignupUserDataAccessInterface
    -userPresenter: SignupOutputBoundary
    -userFactory: UserFactory
    +SignupInteractor(signupDataAccessInterface: SignupUserDataAccessInterface, signupOutputBoundary: SignupOutputBoundary, userFactory: UserFactory): void
    +execute(signupInputData: SignupInputData): void
}
class SignupView {
    +viewName: String
    -signupViewModel: SignUpViewModel
    -usernameInputField: JTextField
    -passwordInputField: JPasswordField
    -repeatPasswordInputField: JPasswordField
    -signupController: SignupController
    -signUp: JButton
    -cancel: JButton

    +SignupView(controller: SignupController, signupViewModel: SignupViewModel): void
    +actionPerformed(evt: ActionEvent): void
    +propertyChange(evt: PropertyChangeEvent): void
}

class SignupController {
    +userSignupUseCaseInteractor: SignupInputBoundary

    +SignupController(SignupInputBoundary)
    +execute(String, String, String): void
}

class SignupPresenter implements SignupOutputBoundary {
    -signupViewModel: SignupViewModel
    -loginViewModel: LoginViewModel
    -viewManagerModel: ViewManagerModel

    +SignupPresenter(ViewManagerModel,SignupViewModel,LoginViewModel)
    +prepareSuccessView(SignupOutputData): void
    +prepareFailView(String): void
}

class SignupViewModel {
    -viewName: String
    -state: SignupState
'    -support: PropertyChangeSupport

    +SignupViewModel(): void

    +getState(state: SignupState): SignupState
    +setState(state: SignupState): void
'    +firePropertyChanged(): void
'    +addPropertyListener(listener: PropertyChangeListener): void
}

class SignupState {
    -username: String
    -usernameError: String
    -password: String
    -passwordError: String
    -repeatPassword: String
    -repeatPasswordError: String

    +SignupState(copy: SignupState)
    +SignupState()

    +getUsername(): String
    +getUsernameError(): String
    +getPassword(): String
    +getPasswordError(): String
    +getRepeatPassword(): String
    +getRepeatPasswordError(): String

    +setUsername(username: String): void
    +setUsernameError(usernameError: String): void
    +setPassword(password: String): void
    +setPasswordError(passwordError: String): void
    +setRepeatPassword(repeatPassword: String): void
    +setRepeatPasswordError(repeatPasswordError: String): void
}

interface User {
+ getName(): String
+ getPassword(): String
+ getCreationTime(): LocalDateTime
}

class CommonUser implements User {
- name: String
- password: String
- creationTime: LocalDateTime

+CommonUser(String name, String password, LocalDateTime creationTime)

+getName(): String
+getPassword(): String
+getCreationTime(): LocalDateTime
}
@enduml
